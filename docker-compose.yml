networks:
  web:
    driver: bridge
  side:
    driver: bridge

services:
  laravel-app:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./api:/var/www
      - /var/www/vendor
    networks:
      - web
      - side
    depends_on:
      - db-mindcare
    command: >
      sh -c "
      if [ ! -f 'composer.json' ]; then
        composer create-project laravel/laravel . &&
        composer install
      fi &&
      php artisan key:generate &&
      while ! nc -z db-mindcare 3306; do
        echo 'Waiting for MySQL to be ready...'
        sleep 1
      done &&
      php artisan migrate &&
      php-fpm
      "

  nginx-mindcare:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - laravel-app
    networks:
      - web

  frontend-mindcare:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    networks:
      - web
      - side
    volumes:
      - ./front:/app
      - /app/node_modules
    command: >
      sh -c "
      if [ ! -f 'package.json' ]; then
        ng new app --standalone --style=css --routing=true --skip-git --skip-tests --directory=. &&
        npm install -D @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint prettier eslint-config-prettier eslint-plugin-prettier &&
        npm install -D tailwindcss postcss autoprefixer &&
        npm install -D cypress @cypress/schematic &&
        npm install lucide-angular @angular/cdk ngx-skeleton-loading @ngrx/store @ngrx/effects @ngrx/entity @ngrx/store-devtools &&
        npx tailwindcss init
      fi &&
      npm install &&
      ng serve --host 0.0.0.0
      "

  db-mindcare:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - side
    ports:
      - "${DB_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin-mindcare:
    image: phpmyadmin:latest
    container_name: phpmyadmin_mindcare
    restart: unless-stopped
    environment:
      - PMA_HOST=db-mindcare
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - side

  grafana-mindcare:
    image: grafana/grafana-enterprise
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - side

volumes:
  mysql_data:
  grafana-storage: {}
