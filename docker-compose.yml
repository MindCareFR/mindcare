networks:
  epichneck:
    driver: bridge
services:
  frontend-mindcare:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    networks:
      - epichneck
    volumes:
      - ./front:/app
      - /app/node_modules
    command: >
      sh -c "
      if [ ! -f 'package.json' ]; then
        ng new app --standalone --style=css --routing=true --skip-git --skip-tests --directory=. &&
        npm install -D @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint prettier eslint-config-prettier eslint-plugin-prettier &&
        npm install -D tailwindcss postcss autoprefixer &&
        npm install -D cypress @cypress/schematic &&
        npm install lucide-angular @angular/cdk ngx-skeleton-loading @ngrx/store @ngrx/effects @ngrx/entity @ngrx/store-devtools &&
        npx tailwindcss init
      fi &&
      npm install &&
      ng serve --host 0.0.0.0
      "

  backend-mindcare:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - epichneck
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    volumes:
      - ./api:/app
      - ~/.m2:/root/.m2

  db-mindcare:
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - epichneck
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin-mindcare:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    networks:
      - epichneck
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin

  grafana-mindcare:
    image: grafana/grafana-enterprise
    container_name: grafana-mindcare
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - epichneck

volumes:
  postgres_data:
  grafana-storage: {}
